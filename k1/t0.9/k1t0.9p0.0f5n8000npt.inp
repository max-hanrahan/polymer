# Abstract LAMMPS input file

variable k world 1
variable T world 0.9
variable p world 0.0
variable n world 8000
variable f world 5 # world ensures leading zeros get passed

variable filename string k${k}t${T}p${p}f${f}n${n}npt
variable config string k${k}t1.2p${p}f${f}n${n}npt #ugly but works for now

log ${filename}.log
units 		lj
dimension 	3

#atom_style	bond
# if there are angular potentials, use next line
atom_style	angle
angle_style	cosine
#read_data ${filename}.lmp # use this if first time running
read_restart ${config}-1.res 

pair_style	lj/cut	2.5
#when using global * * the cutoff should be the smallest of all possible pairs
pair_coeff	* *	1.0 1.0 2.5  #final 2.5 is redundant here; can override global
pair_modify	shift	yes

bond_style	fene
bond_coeff	1	30 1.5		1.0 1.0
special_bonds fene

angle_coeff 	1 ${k}

fix	1	all npt	temp ${T} ${T}  1.0   iso ${p} ${p} 5.0 #todo: is this what f is?
#starting temperature/ending Temperature/Tdamp
fix cmvel all momentum 1000 linear 1 1 1

# todo: find a way to store energy between two different types of poly chains
thermo_style custom step ke pe etotal epair ebond eangle press temp lx vol
thermo 1000

dump 1 all xyz	100000	dump${filename}.xyz

restart 1000 ${filename}-1.res ${filename}-2.res

#run_style respa 2 3 bond 1 pair 2
#timestep 0.006

timestep 0.002

run 10000000 # might reset to upto
